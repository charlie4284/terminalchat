// Code generated by protoc-gen-go. DO NOT EDIT.
// source: terminalchat.proto

package terminalchat

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_63030ee30f67e7e4, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type Message struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_63030ee30f67e7e4, []int{1}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_63030ee30f67e7e4, []int{2}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*User)(nil), "terminalchat.User")
	proto.RegisterType((*Message)(nil), "terminalchat.Message")
	proto.RegisterType((*Empty)(nil), "terminalchat.Empty")
}

func init() {
	proto.RegisterFile("terminalchat.proto", fileDescriptor_63030ee30f67e7e4)
}

var fileDescriptor_63030ee30f67e7e4 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0x49, 0x2d, 0xca,
	0xcd, 0xcc, 0x4b, 0xcc, 0x49, 0xce, 0x48, 0x2c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x41, 0x16, 0x53, 0x52, 0xe2, 0x62, 0x09, 0x2d, 0x4e, 0x2d, 0x12, 0x92, 0xe2, 0xe2, 0x28, 0x2d,
	0x4e, 0x2d, 0xca, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf3, 0x95,
	0xec, 0xb9, 0xd8, 0x7d, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0xf1, 0x29, 0x13, 0x92, 0xe0, 0x62,
	0xcf, 0x85, 0x28, 0x93, 0x60, 0x02, 0x4b, 0xc1, 0xb8, 0x4a, 0xec, 0x5c, 0xac, 0xae, 0xb9, 0x05,
	0x25, 0x95, 0x46, 0x35, 0x5c, 0x3c, 0x21, 0x48, 0xb6, 0x0b, 0x19, 0x73, 0xb1, 0x78, 0xe5, 0x67,
	0xe6, 0x09, 0x09, 0xe9, 0xa1, 0x38, 0x14, 0xe4, 0x22, 0x29, 0x51, 0x54, 0x31, 0xa8, 0x0b, 0x0c,
	0x18, 0x85, 0xcc, 0xb9, 0x38, 0x9d, 0x8a, 0xf2, 0x13, 0x53, 0x92, 0x13, 0x8b, 0x4b, 0x84, 0xb0,
	0xab, 0x92, 0x12, 0x46, 0x15, 0x06, 0xdb, 0x9e, 0xc4, 0x06, 0x0e, 0x00, 0x63, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xa5, 0xf2, 0xe6, 0xd7, 0x16, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TerminalchatClient is the client API for Terminalchat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TerminalchatClient interface {
	Join(ctx context.Context, in *User, opts ...grpc.CallOption) (Terminalchat_JoinClient, error)
	Broadcast(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Empty, error)
}

type terminalchatClient struct {
	cc grpc.ClientConnInterface
}

func NewTerminalchatClient(cc grpc.ClientConnInterface) TerminalchatClient {
	return &terminalchatClient{cc}
}

func (c *terminalchatClient) Join(ctx context.Context, in *User, opts ...grpc.CallOption) (Terminalchat_JoinClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Terminalchat_serviceDesc.Streams[0], "/terminalchat.Terminalchat/Join", opts...)
	if err != nil {
		return nil, err
	}
	x := &terminalchatJoinClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Terminalchat_JoinClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type terminalchatJoinClient struct {
	grpc.ClientStream
}

func (x *terminalchatJoinClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *terminalchatClient) Broadcast(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/terminalchat.Terminalchat/Broadcast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TerminalchatServer is the server API for Terminalchat service.
type TerminalchatServer interface {
	Join(*User, Terminalchat_JoinServer) error
	Broadcast(context.Context, *Message) (*Empty, error)
}

// UnimplementedTerminalchatServer can be embedded to have forward compatible implementations.
type UnimplementedTerminalchatServer struct {
}

func (*UnimplementedTerminalchatServer) Join(req *User, srv Terminalchat_JoinServer) error {
	return status.Errorf(codes.Unimplemented, "method Join not implemented")
}
func (*UnimplementedTerminalchatServer) Broadcast(ctx context.Context, req *Message) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Broadcast not implemented")
}

func RegisterTerminalchatServer(s *grpc.Server, srv TerminalchatServer) {
	s.RegisterService(&_Terminalchat_serviceDesc, srv)
}

func _Terminalchat_Join_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(User)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TerminalchatServer).Join(m, &terminalchatJoinServer{stream})
}

type Terminalchat_JoinServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type terminalchatJoinServer struct {
	grpc.ServerStream
}

func (x *terminalchatJoinServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func _Terminalchat_Broadcast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TerminalchatServer).Broadcast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/terminalchat.Terminalchat/Broadcast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TerminalchatServer).Broadcast(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _Terminalchat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "terminalchat.Terminalchat",
	HandlerType: (*TerminalchatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Broadcast",
			Handler:    _Terminalchat_Broadcast_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Join",
			Handler:       _Terminalchat_Join_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "terminalchat.proto",
}
